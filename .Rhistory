pass_d = "passy"
pass_u_updated = "pass_u_updated"
pass_d_updated = "pass_d_updated"
ncores = 3
graph <- g4
weight = "length"
nodes_id = "name"
index_type = "full"
index_mode = "to"
c_ij_flag = TRUE
B_ij_flag = FALSE
dir_fragmentation_type = "asymmetric"
pass_confluence = 1
field_B = "length"
dir_distance_type = "symmetric"
disp_type = "exponential"
param_u = NA
param_d = NA
param = 1
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[iii],
dams_metadata = dams_metadata,
pass_u_updated = pass_u_updated,
pass_d_updated = pass_d_updated,
river_graph = graph,
weight = weight,
nodes_id = nodes_id,
index_type = index_type,
index_mode = index_mode,
c_ij_flag = c_ij_flag,
B_ij_flag = B_ij_flag,
dir_fragmentation_type = dir_fragmentation_type,
pass_confluence = pass_confluence,
pass_u = pass_u,
pass_d = pass_d,
field_B = field_B,
dir_distance_type = dir_distance_type,
disp_type = disp_type,
param_u = param_u,
param_d = param_d,
param = param)
iii = 3
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[iii],
dams_metadata = dams_metadata,
pass_u_updated = pass_u_updated,
pass_d_updated = pass_d_updated,
river_graph = graph,
weight = weight,
nodes_id = nodes_id,
index_type = index_type,
index_mode = index_mode,
c_ij_flag = c_ij_flag,
B_ij_flag = B_ij_flag,
dir_fragmentation_type = dir_fragmentation_type,
pass_confluence = pass_confluence,
pass_u = pass_u,
pass_d = pass_d,
field_B = field_B,
dir_distance_type = dir_distance_type,
disp_type = disp_type,
param_u = param_u,
param_d = param_d,
param = param)
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[1],
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = graph,
weight = "length",
nodes_id = "name",
index_type = index_type,
index_mode = index_mode,
c_ij_flag = TRUE,
B_ij_flag = FALSE,
dir_fragmentation_type = symmetric,
pass_confluence = 1,
pass_u = "passx",
pass_d = "passy",
field_B = "length",
dir_distance_type = "symmetric",
disp_type = "exponential",
param_u = NA,
param_d = NA,
param = 1)
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[1],
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = graph,
weight = "length",
nodes_id = "name",
index_type = index_type,
index_mode = index_mode,
c_ij_flag = TRUE,
B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric",
pass_confluence = 1,
pass_u = "passx",
pass_d = "passy",
field_B = "length",
dir_distance_type = "symmetric",
disp_type = "exponential",
param_u = NA,
param_d = NA,
param = 1)
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[3],
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = graph,
weight = "length",
nodes_id = "name",
index_type = index_type,
index_mode = index_mode,
c_ij_flag = TRUE,
B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric",
pass_confluence = 1,
pass_u = "passx",
pass_d = "passy",
field_B = "length",
dir_distance_type = "symmetric",
disp_type = "exponential",
param_u = NA,
param_d = NA,
param = 1)
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[3],
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length",
nodes_id = "name",
index_type = index_type,
index_mode = index_mode,
c_ij_flag = TRUE,
B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric",
pass_confluence = 1,
pass_u = "passx",
pass_d = "passy",
field_B = "length",
dir_distance_type = "symmetric",
disp_type = "exponential",
param_u = NA,
param_d = NA,
param = 1)
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[1],
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length",
nodes_id = "name",
index_type = index_type,
index_mode = index_mode,
c_ij_flag = TRUE,
B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric",
pass_confluence = 1,
pass_u = "passx",
pass_d = "passy",
field_B = "length",
dir_distance_type = "symmetric",
disp_type = "exponential",
param_u = NA,
param_d = NA,
param = 1)
dams_metadata
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[1],
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length",
nodes_id = "name",
index_type = "full",
index_mode = "from",
c_ij_flag = TRUE,
B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric",
pass_confluence = 1,
pass_u = "passx",
pass_d = "passy",
field_B = "length",
dir_distance_type = "symmetric",
disp_type = "exponential",
param_u = NA,
param_d = NA,
param = 1)
one_barrier_removal_index(dam_to_remove = dams_metadata$id_dam[3],
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length",
nodes_id = "name",
index_type = "full",
index_mode = "from",
c_ij_flag = TRUE,
B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric",
pass_confluence = 1,
pass_u = "passx",
pass_d = "passy",
field_B = "length",
dir_distance_type = "symmetric",
disp_type = "exponential",
param_u = NA,
param_d = NA,
param = 1)
one_barrier_removal_index(dam_to_remove = "10",
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length", nodes_id = "name", index_type = "full", index_mode = "to",
c_ij_flag = TRUE, B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric", pass_confluence = 1, pass_u = "pass_u", pass_d = "pass_d",
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
param_u = NA, param_d = NA, param = 1)
one_barrier_removal_index(dam_to_remove = "10",
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length", nodes_id = "name", index_type = "full", index_mode = "to",
c_ij_flag = TRUE, B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric", pass_confluence = 1,
pass_u = "passx", pass_d = "passy",
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
param_u = NA, param_d = NA, param = 1)
one_barrier_removal_index(dam_to_remove = "13",
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length", nodes_id = "name", index_type = "full", index_mode = "to",
c_ij_flag = TRUE, B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric", pass_confluence = 1,
pass_u = "passx", pass_d = "passy",
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
param_u = NA, param_d = NA, param = 1)
one_barrier_removal_index(dam_to_remove = "12",
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length", nodes_id = "name", index_type = "full", index_mode = "to",
c_ij_flag = TRUE, B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric", pass_confluence = 1,
pass_u = "passx", pass_d = "passy",
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
param_u = NA, param_d = NA, param = 1)
library(rgdal)
library(shp2graph)
library(riverconn)
library(igraph)
library(tidyverse)
# 22.12.2021
am1<-as.matrix(read.table(file="adj_matrix.txt"))
g1<-graph_from_edgelist(am1)
plot(g1)
components(g1)
is_directed(g1)
vlength1<-read.table(file="centerpoint.txt",header=TRUE)
g2<-set_vertex_attr(g1, name='length', value=vlength1$length)
V(g2)$weight <- strength(g2)
E(g2)$pass_u<-as.numeric(0.5)
E(g2)$pass_d<-as.numeric(0.5)
g3<-set_vertex_attr(g2, name='name', value=paste(1:78))
g4<-set_edge_attr(g3, name='name', value=paste(1:77))
E(g4)$id_dam = E(g4)$name
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[10:12, 1:3]
colnames(dams_metadata) <- c("id_dam", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
one_barrier_removal_index(dam_to_remove = "12",
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length", nodes_id = "name", index_type = "full", index_mode = "to",
c_ij_flag = TRUE, B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric", pass_confluence = 1,
pass_u = "pass_u", pass_d = "pass_d",
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
param_u = NA, param_d = NA, param = 1)
one_barrier_removal_index(dam_to_remove = "10",
dams_metadata = dams_metadata,
pass_u_updated = "pass_u_updated",
pass_d_updated = "pass_d_updated",
river_graph = g4,
weight = "length", nodes_id = "name", index_type = "full", index_mode = "to",
c_ij_flag = TRUE, B_ij_flag = FALSE,
dir_fragmentation_type = "symmetric", pass_confluence = 1,
pass_u = "pass_u", pass_d = "pass_d",
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
param_u = NA, param_d = NA, param = 1)
setwd("C:/Users/Damiano/Desktop/Andrea debug")
# 22.12.2021
am1<-as.matrix(read.table(file="adj_matrix.txt"))
g1<-graph_from_edgelist(am1)
plot(g1)
components(g1)
is_directed(g1)
vlength1<-read.table(file="centerpoint.txt",header=TRUE)
g2<-set_vertex_attr(g1, name='length', value=vlength1$length)
V(g2)$weight <- strength(g2)
E(g2)$pass_u<-as.numeric(0.5)
E(g2)$pass_d<-as.numeric(0.5)
g3<-set_vertex_attr(g2, name='name', value=paste(1:78))
g4<-set_edge_attr(g3, name='name', value=paste(1:77))
E(g4)$id_dam = E(g4)$name
#alpha.centrality(g4)
#estimate_betweenness(g4, cutoff=1000)
#### other test with d_index_calculation
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[10:12, 1:3]
colnames(dams_metadata) <- c("id_dam", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- d_index_calculation(g4,dams_metadata = dams_metadata,id_dam='id_dam', nodes_id = "name",
index_type = "full", mode="leave_one_out", pass_u = "pass_u",  pass_d = "pass_d",
dir_fragmentation_type = "symmetric", pass_confluence = 1,  field_B = "length",
dir_distance_type = "symmetric",
B_ij_flag = FALSE,
disp_type = "exponential",  param_u=0.5, param_d=1,param=1,
parallel=TRUE, ncores = 3)
index2
pass_u
igraph::get.edge.attribute(g4, pass_d)
igraph::get.edge.attribute(g4, "pass_u")
setwd("C:/Users/Damiano/Dropbox/riverconn")
library(riverconn)
setwd("C:/Users/Damiano/Desktop/Andrea debug")
# 22.12.2021
am1<-as.matrix(read.table(file="adj_matrix.txt"))
g1<-graph_from_edgelist(am1)
plot(g1)
components(g1)
is_directed(g1)
vlength1<-read.table(file="centerpoint.txt",header=TRUE)
g2<-set_vertex_attr(g1, name='length', value=vlength1$length)
V(g2)$weight <- strength(g2)
E(g2)$pass_u<-as.numeric(0.5)
E(g2)$pass_d<-as.numeric(0.5)
g3<-set_vertex_attr(g2, name='name', value=paste(1:78))
g4<-set_edge_attr(g3, name='name', value=paste(1:77))
E(g4)$id_dam = E(g4)$name
#alpha.centrality(g4)
#estimate_betweenness(g4, cutoff=1000)
#### other test with d_index_calculation
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[10:12, 1:3]
colnames(dams_metadata) <- c("id_dam", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- d_index_calculation(g4,dams_metadata = dams_metadata,id_dam='id_dam', nodes_id = "name",
index_type = "full", mode="leave_one_out", pass_u = "pass_u",  pass_d = "pass_d",
dir_fragmentation_type = "symmetric", pass_confluence = 1,  field_B = "length",
dir_distance_type = "symmetric",
B_ij_flag = FALSE,
disp_type = "exponential",  param_u=0.5, param_d=1,param=1,
parallel=TRUE, ncores = 3)
setwd("C:/Users/Damiano/Dropbox/riverconn")
library(riverconn)
index2 <- d_index_calculation(g4,dams_metadata = dams_metadata,id_dam='id_dam', nodes_id = "name",
index_type = "full", mode="leave_one_out", pass_u = "pass_u",  pass_d = "pass_d",
dir_fragmentation_type = "symmetric", pass_confluence = 1,  field_B = "length",
dir_distance_type = "symmetric",
B_ij_flag = FALSE,
disp_type = "exponential",  param_u=0.5, param_d=1,param=1,
parallel=TRUE, ncores = 3)
index2
# 22.12.2021
am1<-as.matrix(read.table(file="adj_matrix.txt"))
g1<-graph_from_edgelist(am1)
plot(g1)
components(g1)
is_directed(g1)
vlength1<-read.table(file="centerpoint.txt",header=TRUE)
g2<-set_vertex_attr(g1, name='length', value=vlength1$length)
V(g2)$weight <- strength(g2)
E(g2)$passx<-as.numeric(0.5)
E(g2)$passy<-as.numeric(0.5)
g3<-set_vertex_attr(g2, name='name', value=paste(1:78))
g4<-set_edge_attr(g3, name='name', value=paste(1:77))
E(g4)$id_dam = E(g4)$name
#alpha.centrality(g4)
#estimate_betweenness(g4, cutoff=1000)
#### other test with d_index_calculation
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[10:12, 1:3]
colnames(dams_metadata) <- c("id_dam", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- d_index_calculation(g4,dams_metadata = dams_metadata,id_dam='id_dam', nodes_id = "name",
index_type = "full", mode="leave_one_out", pass_u = "passx",  pass_d = "passy",
dir_fragmentation_type = "symmetric", pass_confluence = 1,  field_B = "length",
dir_distance_type = "symmetric",
B_ij_flag = FALSE,
disp_type = "exponential",  param_u=0.5, param_d=1,param=1,
parallel=TRUE, ncores = 3)
setwd("C:/Users/Damiano/Desktop/Andrea debug")
# 22.12.2021
am1<-as.matrix(read.table(file="adj_matrix.txt"))
g1<-graph_from_edgelist(am1)
plot(g1)
components(g1)
is_directed(g1)
vlength1<-read.table(file="centerpoint.txt",header=TRUE)
g2<-set_vertex_attr(g1, name='length', value=vlength1$length)
V(g2)$weight <- strength(g2)
E(g2)$passx<-as.numeric(0.5)
E(g2)$passy<-as.numeric(0.5)
g3<-set_vertex_attr(g2, name='name', value=paste(1:78))
g4<-set_edge_attr(g3, name='name', value=paste(1:77))
E(g4)$id_dam = E(g4)$name
#alpha.centrality(g4)
#estimate_betweenness(g4, cutoff=1000)
#### other test with d_index_calculation
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[10:12, 1:3]
colnames(dams_metadata) <- c("id_dam", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- d_index_calculation(g4,dams_metadata = dams_metadata,id_dam='id_dam', nodes_id = "name",
index_type = "full", mode="leave_one_out", pass_u = "passx",  pass_d = "passy",
dir_fragmentation_type = "symmetric", pass_confluence = 1,  field_B = "length",
dir_distance_type = "symmetric",
B_ij_flag = FALSE,
disp_type = "exponential",  param_u=0.5, param_d=1,param=1,
parallel=TRUE, ncores = 3)
index2
# Toy graph
g <- graph_from_literal(1-+2, 2-+5, 3-+4, 4-+5, 6-+7, 7-+10, 8-+9, 9-+10, 5-+11, 11-+12, 10-+13, 13-+12, 12-+14, 14-+15, 15-+16)
E(g)
E(g)$id_dam <- c("1", "NA", "2", "3", "NA", "4", "NA", "5", "6", "NA",  "NA", "NA", "NA", "7", "NA")
E(g)$type <- ifelse(is.na(E(g)$id_dam), "joint", "dam")
V(g)$length <- c(1, 1, 2, 3, 4, 1, 5, 1, 7, 7, 3, 2, 4, 5, 6, 9)
V(g)$HSI <- c(0.2, 0.1, 0.3, 0.4, 0.5, 0.5, 0.5, 0.6, 0.7, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8)
V(g)$Id <- V(g)$name
V(g)$name
# Check edged and nodes attributes
g_v_df <- igraph::as_data_frame(g, what = "vertices")
g_e_df <- igraph::as_data_frame(g, what = "edges") %>%
mutate(pass_u = ifelse(!is.na(id_dam),0.1,NA),
pass_d = ifelse(!is.na(id_dam),0.7,NA))
# Recreate graph
g <- igraph::graph_from_data_frame(d = g_e_df, vertices = g_v_df)
# Passability metadata
dams_metadata <- data.frame("id_dam" = c("1", "2", "3", "4", "5", "6", "7"),
"pass_u_updated" = c(1,1,1,1,1,1,1),
"pass_d_updated" = c(1,1,1,1,1,1,1))
d_index_calculation(g,
dams_metadata = dams_metadata,
mode = "leave_one_out", # "add_one", # sequence
parallel = TRUE,
B_ij_flag = FALSE,
ncores = 3, param = 0.5)
d_index_calculation(g,
dams_metadata = dams_metadata,
mode = "leave_one_out", # "add_one", # sequence
parallel = TRUE,
B_ij_flag = FALSE,
ncores = 3, param = 0.5)
# Toy graph
g <- graph_from_literal(1-+2, 2-+5, 3-+4, 4-+5, 6-+7, 7-+10, 8-+9, 9-+10, 5-+11, 11-+12, 10-+13, 13-+12, 12-+14, 14-+15, 15-+16)
E(g)
E(g)$id_dam <- c("1", "NA", "2", "3", "NA", "4", "NA", "5", "6", "NA",  "NA", "NA", "NA", "7", "NA")
E(g)$type <- ifelse(is.na(E(g)$id_dam), "joint", "dam")
V(g)$length <- c(1, 1, 2, 3, 4, 1, 5, 1, 7, 7, 3, 2, 4, 5, 6, 9)
V(g)$HSI <- c(0.2, 0.1, 0.3, 0.4, 0.5, 0.5, 0.5, 0.6, 0.7, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8)
V(g)$Id <- V(g)$name
V(g)$name
# Check edged and nodes attributes
g_v_df <- igraph::as_data_frame(g, what = "vertices")
g_e_df <- igraph::as_data_frame(g, what = "edges") %>%
mutate(passu = ifelse(!is.na(id_dam),0.1,NA),
passd = ifelse(!is.na(id_dam),0.7,NA))
# Recreate graph
g <- igraph::graph_from_data_frame(d = g_e_df, vertices = g_v_df)
# Passability metadata
dams_metadata <- data.frame("id_dam" = c("1", "2", "3", "4", "5", "6", "7"),
"pass_u_updated" = c(1,1,1,1,1,1,1),
"pass_d_updated" = c(1,1,1,1,1,1,1))
d_index_calculation(g,
dams_metadata = dams_metadata,
mode = "leave_one_out", # "add_one", # sequence
parallel = TRUE,
B_ij_flag = FALSE,
ncores = 3, param = 0.5)
d_index_calculation(g,
dams_metadata = dams_metadata,
mode = "leave_one_out", # "add_one", # sequence
parallel = TRUE,
B_ij_flag = FALSE,
ncores = 3, param = 0.5,
pass_u = "passu", pass_d = "passd")
# Save function and submit
devtools::document()
setwd("C:/Users/Damiano/Dropbox/riverconn")
# Save function and submit
devtools::document()
# Check everything
devtools::check()
