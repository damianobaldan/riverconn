library(riverconn)
# 17.12.2021
am1<-as.matrix(read.table(file="adj_matrix.txt"))
g1<-graph_from_edgelist(am1)
plot(g1)
components(g1)
is_directed(g1)
vlength1<-read.table(file="centerpoint.txt",header=TRUE)
g2<-set_vertex_attr(g1, name='length', value=vlength1$length)
V(g2)$weight <- strength(g2)
E(g2)$passy<-as.numeric(0.5)
E(g2)$passx<-as.numeric(0.5)
g3<-set_vertex_attr(g2, name='label', value=paste(1:78))
g4<-set_edge_attr(g3, name='label', value=paste(1:77))
#alpha.centrality(g4)
#estimate_betweenness(g4, cutoff=1000)
library(riverconn)
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[1:5, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[1:3, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=TRUE, ncores = 3,  param = 10, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[1:3, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=TRUE, ncores = 3,  param = 10, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=TRUE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
dams_metadata
b <- igraph::as_data_frame(g4, what = "vertices")
View(b)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
force(dams_metadata)
dams_metadata$id_dam == dam_to_remove
dams_metadata$pass_u_updated[dams_metadata$id_dam == dam_to_remove]
b <- igraph::as_data_frame(g4, what = "edges")
View(b)
# 17.12.2021
am1<-as.matrix(read.table(file="adj_matrix.txt"))
g1<-graph_from_edgelist(am1)
plot(g1)
components(g1)
is_directed(g1)
vlength1<-read.table(file="centerpoint.txt",header=TRUE)
g2<-set_vertex_attr(g1, name='length', value=vlength1$length)
V(g2)$weight <- strength(g2)
E(g2)$passy<-as.numeric(0.5)
E(g2)$passx<-as.numeric(0.5)
g3<-set_vertex_attr(g2, name='label', value=paste(1:78))
g4<-set_edge_attr(g3, name='label', value=paste(1:77))
#alpha.centrality(g4)
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[1:3, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
dir_distance_type
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[1:3, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
library(riverconn)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
library(riverconn)
library(riverconn)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=FALSE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
dams_metadata
a <- igraph::as_data_frame(g4, what = "vertices")
b <- igraph::as_data_frame(g4, what = "edges")
View(b)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=TRUE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
library(riverconn)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=TRUE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
graph = g4
# Rename graph vertices and dams metadata based on id_dam
igraph::E(graph)$id_dam <- igraph::get.edge.attribute(graph, id_dam)
id_dam="label"
index_type = "full"
mode="leave_one_out"
dir_fragmentation_type = "asymmetric"
pass_confluence = 1
field_B = "length"
dir_distance_type = "symmetric"
disp_type = "exponential"
param=1
parallel=FALSE
pass_u_updated = "pass_u_updated"
pass_d_updated = "pass_d_updated"
param = 0.5
# Rename graph vertices and dams metadata based on id_dam
igraph::E(graph)$id_dam <- igraph::get.edge.attribute(graph, id_dam)
igraph::E(graph)$id_dam
# Change passability information
igraph::E(river_graph)$pass_u <- igraph::get.edge.attribute(river_graph, pass_u)
river_graph = graph
# Change passability information
igraph::E(river_graph)$pass_u <- igraph::get.edge.attribute(river_graph, pass_u)
igraph::E(river_graph)$pass_d <- igraph::get.edge.attribute(river_graph, pass_d)
pass_u
library(riverconn)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=TRUE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
b <- igraph::as_data_frame(g4, what = "edges")
library(riverconn)
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[1:3, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
B_ij_flag = FALSE,
parallel=TRUE, ncores = 3,  param = 0.5, pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
library(riverconn)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
library(riverconn)
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
library(riverconn)
index2
pass_u
pass_u
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=FALSE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
library(riverconn)
param_u
param_d
param
river_graph <- g4
graph <- g4
# Rename graph vertices and dams metadata based on id_dam
igraph::E(graph)$id_dam <- igraph::get.edge.attribute(graph, id_dam)
igraph::E(graph)$id_dam
river_graph <- graph
igraph::get.edge.attribute(river_graph, pass_u)
pass_u = "passx"
pass_d = "passy"
igraph::get.edge.attribute(river_graph, pass_u)
# Change passability information
igraph::E(river_graph)$pass_u <- igraph::get.edge.attribute(river_graph, pass_u)
igraph::E(river_graph)$pass_d <- igraph::get.edge.attribute(river_graph, pass_d)
# Initialize the graph for the loop
river_graph_att_loop <- river_graph
dam_to_remove
dam_to_remove = "1"
# Change the passability of the corresponding edge to 1
igraph::E(river_graph_att_loop)$pass_u[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_u_updated[dams_metadata$id_dam == dam_to_remove]
igraph::E(river_graph_att_loop)$pass_d[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_d_updated[dams_metadata$id_dam == dam_to_remove]
dams_metadata
dams_metadata$pass_u_updated
dams_metadata$pass_u_updated[dams_metadata$id_dam == dam_to_remove]
dams_metadata$id_dam
dams_metadata <- dams_metadata %>% dplyr::rename_with( ~"id_dam", contains(id_dam))
dams_metadata <- dams_metadata %>% dplyr::rename_with( ~"pass_u_updated", contains(pass_u_updated))
dams_metadata <- dams_metadata %>% dplyr::rename_with( ~"pass_d_updated", contains(pass_d_updated))
dams_metadata$pass_u_updated[dams_metadata$id_dam == dam_to_remove]
# Change the passability of the corresponding edge to 1
igraph::E(river_graph_att_loop)$pass_u[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_u_updated[dams_metadata$id_dam == dam_to_remove]
igraph::E(river_graph_att_loop)$pass_d[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_d_updated[dams_metadata$id_dam == dam_to_remove]
igraph::E(river_graph_att_loop)$pass_u
# Calculate index
index <- index_calculation(river_graph_att_loop, index_type = index_type, index_mode = index_mode,
#...,
pass_u = "pass_u", pass_d = "pass_d",
param_u = param_u, param_d = param_d, param = param)
index_type = "full"
index_mode = "from"
# Calculate index
index <- index_calculation(river_graph_att_loop, index_type = index_type, index_mode = index_mode,
#...,
pass_u = "pass_u", pass_d = "pass_d",
param_u = param_u, param_d = param_d, param = param)
nodes_id = "label"
# Calculate index
index <- index_calculation(river_graph_att_loop, index_type = index_type, index_mode = index_mode,
#...,
pass_u = "pass_u", pass_d = "pass_d",
param_u = param_u, param_d = param_d, param = param)
# Calculate index
index <- index_calculation(river_graph_att_loop, index_type = index_type, index_mode = index_mode,
nodes_id = "label",
#...,
pass_u = "pass_u", pass_d = "pass_d",
param_u = param_u, param_d = param_d, param = param)
index
dam_to_remove = "56"
river_graph_att_loop <- river_graph
# Change the passability of the corresponding edge to 1
igraph::E(river_graph_att_loop)$pass_u[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_u_updated[dams_metadata$id_dam == dam_to_remove]
igraph::E(river_graph_att_loop)$pass_d[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_d_updated[dams_metadata$id_dam == dam_to_remove]
# Calculate index
index <- index_calculation(river_graph_att_loop, index_type = index_type, index_mode = index_mode,
nodes_id = "label",
#...,
pass_u = "pass_u", pass_d = "pass_d",
param_u = param_u, param_d = param_d, param = param)
dams_metadata$id_dam
dam_to_remove = "3"
# Initialize the graph for the loop
river_graph_att_loop <- river_graph
# Change the passability of the corresponding edge to 1
igraph::E(river_graph_att_loop)$pass_u[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_u_updated[dams_metadata$id_dam == dam_to_remove]
igraph::E(river_graph_att_loop)$pass_d[igraph::E(river_graph_att_loop)$id_dam == dam_to_remove] <-
dams_metadata$pass_d_updated[dams_metadata$id_dam == dam_to_remove]
# Calculate index
index <- index_calculation(river_graph_att_loop, index_type = index_type, index_mode = index_mode,
nodes_id = "label",
#...,
pass_u = "pass_u", pass_d = "pass_d",
param_u = param_u, param_d = param_d, param = param)
index
library(riverconn)
knitr::opts_chunk$set(echo = TRUE)
library(igraph)
g <- graph_from_literal(1-+2, 2-+4, 3-+2, 4-+6, 6-+7, 5-+6, 7-+8, 9-+5, 10-+5 )
par(mfrow=c(1,2))
plot(g, layout = layout_as_tree(as.undirected(g), root = 8, flip.y = FALSE), main="Directed graph")
plot(as.undirected(g), layout = layout_as_tree(as.undirected(g), root = 8, flip.y = FALSE), main="Undirected graph")
library(igraph)
library(dplyr)
library(tidyr)
library(ggnetwork)
library(viridis)
library(riverconn)
library(doParallel)
g <- graph_from_literal(1-+2, 2-+5, 3-+4, 4-+5, 6-+7, 7-+10, 8-+9, 9-+10,
5-+11, 11-+12, 10-+13, 13-+12, 12-+14, 14-+15, 15-+16)
g
# Edges
E(g)
# vertices
V(g)
igraph::as_data_frame(g, what = "edges")
igraph::as_data_frame(g, what = "vertices")
igraph::as_adjacency_matrix(g)
# Decorate edges
E(g)$id_dam <- c(1, NA, 2, 3, NA, 4, NA, 5, 6, NA,  NA, NA, NA, 7, NA)
E(g)$type <- ifelse(is.na(E(g)$id_dam), "joint", "dam")
E(g)
# Decorate vertices
V(g)$length <- c(1, 1, 2, 3, 4, 1, 5, 1, 7, 7, 3, 2, 4, 5, 6, 9)
V(g)$HSI <- c(0.2, 0.1, 0.3, 0.4, 0.5, 0.5, 0.5, 0.6, 0.7, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8)
V(g)$Id <- V(g)$name
V(g)
gg0 <- ggnetwork(g, layout =  layout_as_tree(g %>% as.undirected, root = 16), scale = FALSE)
ggplot(gg0, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_nodes(alpha = 0.3) +
geom_edges(alpha = 0.5,
arrow = arrow(length = unit(10, "pt"), type = "closed"),
aes(color = type)) +
scale_color_viridis(discrete = TRUE)+
geom_nodetext(aes(label = name), fontface = "bold") +
theme_blank()
ggplot(gg0, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.5,
arrow = arrow(length = unit(10, "pt"), type = "open")) +
geom_nodes(aes(size = length, color = HSI)) +
scale_color_viridis()+
theme_blank()
par(mfrow=c(1,3))
g1 <- set_graph_directionality(g, field_name = "Id", outlet_name = "16")
g2 <- set_graph_directionality(g, field_name = "Id", outlet_name = "5")
plot(as.undirected(g), layout = layout_as_tree(as.undirected(g), root = 8, flip.y = FALSE), main="Undirected graph")
plot(g1, layout = layout_as_tree(as.undirected(g1), root = 16, flip.y = FALSE), main="Outlet = 16")
plot(g2, layout = layout_as_tree(as.undirected(g2), root = 5, flip.y = FALSE), main="Outlet = 5")
# Check edged and nodes attributes
g_v_df <- igraph::as_data_frame(g, what = "vertices")
g_v_df
g_e_df <- igraph::as_data_frame(g, what = "edges") %>%
mutate(pass_u = ifelse(!is.na(id_dam),0.1,NA),
pass_d = ifelse(!is.na(id_dam),0.7,NA))
g_e_df
# Recreate graph
g <- igraph::graph_from_data_frame(d = g_e_df, vertices = g_v_df)
g
index_calculation(g, param = 0.9)
index_calculation(g, B_ij_flag = FALSE)
index_calculation(g, param = 0.9, c_ij_flag = FALSE)
index_calculation(g, c_ij_flag = FALSE,
dir_distance_type = "asymmetric",
disp_type = "threshold", param_u = 0, param_d = 5)
index_calculation(g, c_ij_flag = FALSE,
dir_distance_type = "asymmetric",
disp_type = "threshold", param_u = 5, param_d = 10)
index_calculation(g, c_ij_flag = FALSE,
dir_distance_type = "symmetric",
disp_type = "threshold", param = 10)
index_calculation(g, c_ij_flag = FALSE,
index_type = "reach", index_mode = "to",
dir_distance_type = "asymmetric",
disp_type = "threshold", param_u = 0, param_d = 5)
index_calculation(g, c_ij_flag = FALSE,
dir_distance_type = "asymmetric",
index_type = "reach", index_mode = "to",
disp_type = "threshold", param_u = 5, param_d = 10)
index_calculation(g, c_ij_flag = FALSE,
index_type = "reach", index_mode = "to",
dir_distance_type = "symmetric",
disp_type = "threshold", param = 10)
dams_metadata <- data.frame("id_dam" =  c(1, 2, 3, 4, 5, 6, 7),
"pass_u_updated" = c(1, 1, 1, 1, 1, 1, 1),
"pass_d_updated" = c(1, 1, 1, 1, 1, 1, 1))
dams_metadata
d_index_calculation(g,
dams_metadata,
c_ij_flag = TRUE,
B_ij_flag = TRUE,
parallel = FALSE, ncores = 3,
param_u = 10,  param_d = 10,
index_type = "full",
dir_distance_type = "asymmetric",
disp_type = "threshold")
d_index <- d_index_calculation (g,
dams_metadata,
parallel = FALSE, ncores = 3,
param_u = 10,  param_d = 10,
index_type = "full",
B_ij_flag = FALSE)
# Check edged and nodes attributes
g_v_df <- igraph::as_data_frame(g, what = "vertices")
g_v_df
g_e_df <- igraph::as_data_frame(g, what = "edges") %>%
left_join(d_index, by = "id_dam")
g_e_df
# Recreate graph
g <- igraph::graph_from_data_frame(d = g_e_df, vertices = g_v_df)
g
# Fortify and plot graph
gg0 <- ggnetwork(g, layout =  layout_as_tree(g %>% as.undirected, root = 16), scale = FALSE)
ggplot(gg0, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(alpha = 0.5, size = 3,
arrow = arrow(length = unit(10, "pt"), type = "open"),
aes(color = d_index)) +
geom_nodes() +
scale_color_viridis()+
theme_blank()
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[1:3, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
library(riverconn)
index2
setwd("C:/Users/Damiano/Desktop/Andrea debug")
dams_metadata<-read.table("dam_metadata.txt", header=TRUE,colClasses=c("character","numeric","numeric"))
dams_metadata <- dams_metadata[10:13, 1:3]
colnames(dams_metadata) <- c("label", "pass_u_updated", "pass_d_updated")
dams_metadata$pass_u_updated <- 1
dams_metadata$pass_d_updated <- 1
dams_metadata
index2 <- riverconn::d_index_calculation(g4, dams_metadata=dams_metadata, id_dam = "label", index_type = "full",
mode="leave_one_out", dir_fragmentation_type = "symmetric", pass_confluence = 1,
field_B = "length", dir_distance_type = "symmetric", disp_type = "exponential",
parallel=TRUE, ncores = 3,  param = 0.5,
pass_u = "passx", pass_d = "passy",
nodes_id = "label", pass_u_updated = "pass_u_updated", pass_d_updated = "pass_d_updated")
index2
